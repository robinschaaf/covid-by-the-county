{"version":3,"sources":["./node_modules/@ionic-super-tabs/core/dist/esm/utils-640d2cf5.js","./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./src/app/services/spinner-service.ts","./src/app/services/splash-screen-service.ts","./src/app/services/text-view-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,2BAA2B,gBAAgB,gCAAgC,6BAA6B,wBAAwB;AACzM,yCAAyC,2BAA2B,8BAA8B,iCAAiC,mBAAmB,kBAAkB,cAAc;AACtL;AACA;AACA;AACA;AACA;AACA;AACA;;AAE0I;;;;;;;;;;;;;ACrG1I;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;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","file":"common-es2015.js","sourcesContent":["const DEFAULT_CONFIG = {\n    dragThreshold: 20,\n    allowElementScroll: false,\n    maxDragAngle: 40,\n    sideMenuThreshold: 50,\n    transitionDuration: 150,\n    shortSwipeDuration: 300,\n    debug: false,\n    avoidElements: false,\n};\nfunction pointerCoord(ev) {\n    // get X coordinates for either a mouse click\n    // or a touch depending on the given event\n    if (ev) {\n        const changedTouches = ev.changedTouches;\n        if (changedTouches && changedTouches.length > 0) {\n            const touch = changedTouches[0];\n            return { x: touch.clientX, y: touch.clientY };\n        }\n        if (ev.pageX !== undefined) {\n            return { x: ev.pageX, y: ev.pageY };\n        }\n    }\n    return { x: 0, y: 0 };\n}\nconst nativeScrollAvailable = 'scrollBehavior' in document.documentElement.style;\nlet _getTs;\nif (window.performance && window.performance.now) {\n    _getTs = window.performance.now.bind(window.performance);\n}\nelse {\n    _getTs = Date.now.bind(Date);\n}\nconst getTs = _getTs;\nconst easeInOutCubic = (t) => t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\nfunction getScrollCoord(start, dest, startTime, currentTime, duration) {\n    const time = Math.min(1, (currentTime - startTime) / duration);\n    const timeFn = easeInOutCubic(time);\n    return Math.ceil((timeFn * (dest - start)) + start);\n}\nfunction scroll(el, startX, x, y, startTime, duration) {\n    const currentTime = getTs();\n    const scrollX = startX === x ? x : getScrollCoord(startX, x, startTime, currentTime, duration);\n    el.scrollTo(scrollX, y);\n    if (currentTime - startTime >= duration) {\n        return;\n    }\n    requestAnimationFrame(() => {\n        scroll(el, startX, x, y, startTime, duration);\n    });\n}\nconst scrollEl = (el, x, y = 0, native = false, duration = 300) => {\n    if (duration <= 0) {\n        requestAnimationFrame(() => {\n            el.scrollTo(x, y);\n        });\n        return;\n    }\n    if (native && nativeScrollAvailable) {\n        el.scrollTo({\n            left: x,\n            top: y,\n            behavior: 'smooth',\n        });\n        return;\n    }\n    requestAnimationFrame(() => {\n        scroll(el, el.scrollLeft, x, y, getTs(), duration);\n    });\n};\nfunction checkGesture(newCoords, initialCoords, config) {\n    if (!initialCoords) {\n        return false;\n    }\n    const radians = config.maxDragAngle * (Math.PI / 180);\n    const maxCosine = Math.cos(radians);\n    const deltaX = newCoords.x - initialCoords.x;\n    const deltaY = newCoords.y - initialCoords.y;\n    const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    if (distance >= config.dragThreshold) {\n        // swipe is long enough\n        // lets check the angle\n        const angle = Math.atan2(deltaY, deltaX);\n        const cosine = Math.cos(angle);\n        return Math.abs(cosine) > maxCosine;\n    }\n    return false;\n}\nfunction getNormalizedScrollX(el, width, delta = 0) {\n    return Math.max(0, Math.min(el.scrollWidth - width, el.scrollLeft + delta));\n}\nconst debugStyle1 = 'background: linear-gradient(135deg,#4150b2,#f71947); border: 1px solid #9a9a9a; color: #ffffff; border-bottom-left-radius: 2px; border-top-left-radius: 2px; padding: 2px 0 2px 4px;';\nconst debugStyle2 = 'background: #252b3e; border: 1px solid #9a9a9a; border-top-right-radius: 2px; border-bottom-right-radius: 2px; margin-left: -2px; padding: 2px 4px; color: white;';\nfunction debugLog(config, tag, vals) {\n    if (!config || !config.debug) {\n        return;\n    }\n    // Some gorgeous logging, because apparently I have lots of free time to style console logs and write this comment\n    console.log(`%csuper-tabs %c%s`, debugStyle1, debugStyle2, ' '.repeat(10 - tag.length) + tag, ...vals);\n}\n\nexport { DEFAULT_CONFIG as D, getTs as a, checkGesture as c, debugLog as d, getNormalizedScrollX as g, pointerCoord as p, scrollEl as s };\n","import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { IService } from './IService';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from './loading-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SpinnerService implements IService {\r\n\r\n  constructor(private loadingService: LoadingService) { }\r\n\r\n  getTitle = (): string => 'Spinners';\r\n\r\n  getAllThemes = (): Array<any> => {\r\n    return [\r\n      { 'url': 'spinner/0', 'title': 'Default Svg Icons', 'theme': 'native' },\r\n      { 'url': 'spinner/1', 'title': 'Custom Svg Icons', 'theme': 'custom' }\r\n    ];\r\n  }\r\n\r\n  getDataForTheme = (menuItem: any): any => {\r\n    return this[\r\n        'getDataFor' +\r\n        menuItem.theme.charAt(0).toUpperCase() +\r\n        menuItem.theme.slice(1)\r\n    ]();\r\n  }\r\n\r\n  //* Data Set for page 1\r\n  getDataForCustom = (): Array<any> => {\r\n    return [\r\n      { 'icon': 'audio', 'name': 'Audio' },\r\n      { 'icon': 'ball-triangle', 'name': 'Ball-triangle' },\r\n      { 'icon': 'bars', 'name': 'Bars' },\r\n      { 'icon': 'grid', 'name': 'Grid' },\r\n      { 'icon': 'hearts', 'name': 'Hearts' },\r\n      { 'icon': 'oval', 'name': 'Oval' },\r\n      { 'icon': 'puff', 'name': 'Puff' },\r\n      { 'icon': 'three-dots', 'name': 'Three-dots' }\r\n    ];\r\n  }\r\n\r\n  //* Data Set for page 2\r\n  getDataForNative = (): Array<any> => {\r\n    return [\r\n      { 'icon': 'lines', 'name': 'Lines' },\r\n      { 'icon': 'lines-small', 'name': 'Lines-small' },\r\n      { 'icon': 'dots', 'name': 'Dots' },\r\n      { 'icon': 'bubbles', 'name': 'Bubbles' },\r\n      { 'icon': 'circles', 'name': 'Circles' }\r\n    ];\r\n  }\r\n\r\n  load(item: any): Observable<any> {\r\n    this.loadingService.show();\r\n    return new Observable(observer => {\r\n      this.loadingService.hide();\r\n      observer.next(this.getDataForTheme(item));\r\n      observer.complete();\r\n    });\r\n  }\r\n}\r\n","import { IService } from './IService';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoadingService } from './loading-service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SplashScreenService implements IService {\r\n\r\n    constructor(private loadingService: LoadingService) { }\r\n\r\n    getTitle = (): string => 'Splash screens';\r\n\r\n    getAllThemes = (): Array<any> => {\r\n        return [\r\n            { 'url': 'splash-screens/0', 'title': 'Fade in + Ken Burns 1', 'theme': 'layout1' },\r\n            { 'url': 'splash-screens/1', 'title': 'Down + fade in', 'theme': 'layout2' },\r\n            { 'url': 'splash-screens/2', 'title': 'Down + Ken Burns', 'theme': 'layout3' }\r\n        ];\r\n    }\r\n\r\n    getDataForTheme = (menuItem: any): Array<any> => {\r\n        return this[\r\n            'getDataFor' +\r\n            menuItem.theme.charAt(0).toUpperCase() +\r\n            menuItem.theme.slice(1)\r\n        ]();\r\n    }\r\n\r\n    //* Data Set for page 1\r\n    getDataForLayout1 = (): any => {\r\n        return {\r\n            'headerTitle': 'Fade in + Ken Burns 1',\r\n            \"duration\": 10000,\r\n            \"backgroundImage\": \"assets/imgs/background/39.jpg\",\r\n            \"logo\": \"assets/imgs/logo/2.png\",\r\n            \"title\": \"\"\r\n        };\r\n    }\r\n\r\n    //* Data Set for page 2\r\n    getDataForLayout2 = (): any => {\r\n        return {\r\n            'headerTitle': 'Down + fade in + Ken Burns',\r\n            \"duration\": 10000,\r\n            \"backgroundImage\": \"assets/imgs/background/28.jpg\",\r\n            \"logo\": \"assets/imgs/logo/2.png\",\r\n            \"title\": \"Welcome to the moon\"\r\n        };\r\n    }\r\n\r\n    //* Data Set for page 3\r\n    getDataForLayout3 = (): any => {\r\n        return {\r\n            'headerTitle': 'Down + Ken Burns',\r\n            \"duration\": 10000,\r\n            \"backgroundImage\": \"assets/imgs/background/29.jpg\",\r\n            \"logo\": \"assets/imgs/logo/2.png\",\r\n            \"title\": \"\"\r\n        };\r\n    }\r\n\r\n    load(item: any): Observable<any> {\r\n        this.loadingService.show();\r\n        return new Observable(observer => {\r\n            this.loadingService.hide();\r\n            observer.next(this.getDataForTheme(item));\r\n            observer.complete();\r\n        });\r\n    }\r\n}\r\n","import { IService } from './IService';\r\n\r\nexport class TextViewService implements IService {\r\n\r\n  constructor() { }\r\n\r\n  getId = (): string => 'textViews';\r\n\r\n  getTitle = (): string => 'Typo + small components';\r\n\r\n  getAllThemes = (): Array<any> => {\r\n    return [\r\n      { 'url': 'textview', 'title': 'All', 'theme': 'all' },\r\n    ];\r\n  }\r\n\r\n  getEventsForTheme = (menuItem: any): any => {\r\n    return {};\r\n  }\r\n\r\n  prepareParams = (item: any) => {\r\n    return {\r\n      title: this.getTitle(),\r\n      data: [],\r\n      events: this.getEventsForTheme(item)\r\n    };\r\n  }\r\n\r\n  load(url: string) {\r\n    return null;\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}