{"version":3,"sources":["./src/app/pages/items/items.html","./src/app/pages/items/items.module.ts","./src/app/pages/items/items.page.ts","./src/app/services/HttpService.ts","./src/app/services/list-view-service.ts","./src/app/services/mail-chimp-service.ts","./src/app/services/validation.ts"],"names":[],"mappings":"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","file":"pages-items-items-module-es2015.js","sourcesContent":["export default \"<!-- Header -->\\r\\n<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>{{title}}</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n<!-- Content -->\\r\\n<ion-content>\\r\\n  <ion-grid class=\\\"ion-no-padding\\\">\\r\\n    <ion-row>\\r\\n      <ion-col size=\\\"12\\\" class=\\\"ion-no-padding\\\">\\r\\n        <ion-list *ngIf=\\\"pages.length\\\">\\r\\n          <ion-item class=\\\"ion-menu-toggle\\\" *ngFor=\\\"let item of pages\\\" (click)=\\\"openPage(item)\\\">\\r\\n            <ion-label>\\r\\n              <h1 class=\\\"text-size-md text-color-primary font-light\\\">{{item.title}}</h1>\\r\\n            </ion-label>\\r\\n          </ion-item>\\r\\n        </ion-list>\\r\\n      </ion-col>\\r\\n    </ion-row>\\r\\n  </ion-grid>\\r\\n</ion-content>\\r\\n\";","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { ItemsPage } from './items.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild([\r\n      {\r\n        path: '',\r\n        component: ItemsPage\r\n      }\r\n    ])\r\n  ],\r\n  declarations: [ItemsPage],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class ItemsPageModule {}\r\n","import { Component } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { HttpService } from '../../services/HttpService';\r\nimport { ValidationService } from '../../services/validation';\r\nimport { MailChimpService } from '../../services/mail-chimp-service';\r\n\r\nimport { IService } from '../../services/IService';\r\n\r\nimport { CheckBoxService } from '../../services/check-box-service';\r\nimport { AnimationService } from '../../services/animation-service';\r\nimport { TextViewService } from '../../services/text-view-service';\r\nimport { SpinnerService } from '../../services/spinner-service';\r\nimport { SplashScreenService } from '../../services/splash-screen-service';\r\nimport { SearchBarService } from '../../services/search-bar-service';\r\nimport { WizardService } from '../../services/wizard-service';\r\nimport { TabsService } from '../../services/tabs-service';\r\nimport { LoginService } from '../../services/login-service';\r\nimport { RegisterService } from '../../services/register-service';\r\nimport { ListViewService } from '../../services/list-view-service';\r\nimport { ParallaxService } from '../../services/parallax-service';\r\nimport { ImageGalleryService } from '../../services/image-gallery-service';\r\nimport { MapsService } from '../../services/maps-service';\r\nimport { QRCodeService } from '../../services/qrcode-service';\r\nimport { RadioButtonService } from '../../services/radio-button-service';\r\nimport { RangeService } from '../../services/range-service';\r\nimport { ToggleService } from '../../services/toggle-service';\r\nimport { SelectService } from '../../services/select-service';\r\nimport { ActionSheetService } from '../../services/action-sheet-service';\r\nimport { TimeLineService } from '../../services/time-line-service';\r\nimport { FormService } from '../../services/form-service';\r\nimport { CommentService } from '../../services/comment-service';\r\nimport { ProfileService } from '../../services/profile-service';\r\nimport { PaymentService } from '../../services/payment-service';\r\nimport { SegmentService } from '../../services/segment-service';\r\nimport { ScrollSegmentService } from '../../services/scroll-segment-service';\r\nimport { AlertService } from '../../services/alert-service';\r\nimport { NewPasswordService } from './../../services/new-password-services';\r\nimport { ForgetPasswordService } from './../../services/forget-password-services';\r\nimport { AppSettings } from './../../services/app-settings';\r\n\r\n@Component({\r\n    templateUrl: 'items.html',\r\n    providers: [\r\n        MailChimpService, TextViewService, SpinnerService,\r\n        SplashScreenService, LoginService, RegisterService, AnimationService,\r\n        SearchBarService, CheckBoxService, WizardService, TabsService, ParallaxService,\r\n        ListViewService, ImageGalleryService, NewPasswordService, ForgetPasswordService,\r\n        HttpService, ValidationService, MapsService, QRCodeService, RadioButtonService, RangeService,\r\n        ToggleService, SelectService, ActionSheetService, TimeLineService, FormService, CommentService,\r\n        ProfileService, SegmentService, AlertService, PaymentService, ScrollSegmentService]\r\n})\r\nexport class ItemsPage {\r\n    title: string;\r\n    componentName: string;\r\n    pages: any = {};\r\n    listServices: { [key: string]: IService; } = {};\r\n    service: IService;\r\n\r\n    // services: array\r\n    constructor(public navCtrl: NavController,\r\n        private textViewService: TextViewService,\r\n        private spinnerService: SpinnerService,\r\n        private imageGalleryService: ImageGalleryService,\r\n        private searchBarService: SearchBarService,\r\n        private checkBoxService: CheckBoxService,\r\n        private animationService: AnimationService,\r\n        private parallaxService: ParallaxService,\r\n        private wizardService: WizardService,\r\n        private tabsService: TabsService,\r\n        private listViewService: ListViewService,\r\n        private loginService: LoginService,\r\n        private registerService: RegisterService,\r\n        private splashScreenService: SplashScreenService,\r\n        private httpService: HttpService,\r\n        private validationService: ValidationService,\r\n        private mailChimpService: MailChimpService,\r\n        private mapsService: MapsService,\r\n        private qRCodeService: QRCodeService,\r\n        private radioButtonService: RadioButtonService,\r\n        private rangeService: RangeService,\r\n        private toggleService: ToggleService,\r\n        private selectService: SelectService,\r\n        private actionSheetService: ActionSheetService,\r\n        private timeLineService: TimeLineService,\r\n        private formService: FormService,\r\n        private commentService: CommentService,\r\n        public alertCtrl: AlertController,\r\n        private profileService: ProfileService,\r\n        private segmentService: SegmentService,\r\n        private scrollSegmentService: ScrollSegmentService,\r\n        private paymentService: PaymentService,\r\n        private alertService: AlertService,\r\n        private newPasswordService: NewPasswordService,\r\n        private forgetPasswordService: ForgetPasswordService,\r\n        private route: ActivatedRoute) {\r\n\r\n        this.listServices = {\r\n            'checkBoxes': this.checkBoxService,\r\n            'animation': this.animationService,\r\n            'login': this.loginService,\r\n            'register': this.registerService,\r\n            'imageGallery': this.imageGalleryService,\r\n            'textViews': this.textViewService,\r\n            'spinner': this.spinnerService,\r\n            'parallax': this.parallaxService,\r\n            'wizard': this.wizardService,\r\n            'searchBars': this.searchBarService,\r\n            'tabs': this.tabsService,\r\n            'listViews': this.listViewService,\r\n            'splashScreens': this.splashScreenService,\r\n            'maps': this.mapsService,\r\n            'timeline': this.timeLineService,\r\n            'qrcode': this.qRCodeService,\r\n            'radioButton': this.radioButtonService,\r\n            'range': this.rangeService,\r\n            'toggle': this.toggleService,\r\n            'select': this.selectService,\r\n            'form': this.formService,\r\n            'comment': this.commentService,\r\n            'profile': this.profileService,\r\n            'actionSheet': this.actionSheetService,\r\n            'segment': this.segmentService,\r\n            'scrollSegment': this.scrollSegmentService,\r\n            'payment': this.paymentService,\r\n            'alert': this.alertService,\r\n            'newPassword': this.newPasswordService,\r\n            'forgetPassword': this.forgetPasswordService\r\n        };\r\n\r\n        this.componentName = this.route.snapshot.paramMap.get('type');\r\n        this.service = this.listServices[this.componentName];\r\n\r\n        if (this.service) {\r\n            this.pages = this.service.getAllThemes();\r\n            this.title = this.service.getTitle();\r\n        }\r\n    }\r\n\r\n    openPage(page: any) {\r\n        if (AppSettings.SUBSCRIBE) {\r\n          if (!this.mailChimpService.showMailChimpForm()) {\r\n            this.showPrompt();\r\n            this.mailChimpService.setMailChimpForm(true);\r\n          } else {\r\n            this.navCtrl.navigateForward([page.url], {});\r\n          }\r\n        } else {\r\n            this.navCtrl.navigateForward([page.url], {});\r\n        }\r\n    }\r\n\r\n    async showPrompt() {\r\n        const alertDialog = await this.alertCtrl.create({\r\n            header: 'STAY TUNED FOR NEW THEMES AND FREEBIES',\r\n            message: 'SUBSCRIBE TO <br> OUR NEWSLETTER',\r\n            cssClass: 'basic-dialog',\r\n            inputs: [\r\n                {\r\n                    name: 'email',\r\n                    placeholder: 'Your e-mail'\r\n                },\r\n            ],\r\n            buttons: [\r\n                {\r\n                    text: 'Cancel'\r\n                },\r\n                {\r\n                    text: 'Send',\r\n                    handler: data => {\r\n                        if (data) {\r\n                            if (this.validationService.isMail(data.email)) {\r\n                                this.httpService.sendData(data.email).subscribe(\r\n                                    _ => {\r\n                                        console.log('sucess')\r\n                                        this.mailChimpService.hideMailChimp();\r\n                                    }, err => {\r\n                                        console.log('err')\r\n                                        console.log(JSON.stringify(err))\r\n                                    }, null);\r\n                            } else {\r\n                                return false;\r\n                            }\r\n                        } else {\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            ]\r\n        });\r\n        alertDialog.present();\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class HttpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  sendData(email: string) {\r\n    let url = 'https://facebook.us14.list-manage.com/subscribe/post-json?u=2c0f7baa8dc004a62ff3922e3&id=456928d791&EMAIL='\r\n    + encodeURI(email) + '&b_2c0f7baa8dc004a62ff3922e3_456928d791';\r\n    return this.http.get(url);\r\n  }\r\n}","import { IService } from './IService';\r\n\r\nexport class ListViewService implements IService {\r\n\r\n  constructor() { }\r\n\r\n  getId = (): string => 'listViews';\r\n\r\n  getTitle = (): string => 'List views';\r\n\r\n  // Submenu for list\r\n  getAllThemes = (): Array<any> => {\r\n    return [\r\n      { 'url': 'subitems/expandable', 'title': 'Expandable', 'theme': 'expandable'},\r\n      { 'url': 'subitems/dragAndDrop', 'title': 'Drag&Drop', 'theme': 'dragAndDrop'},\r\n      { 'url': 'subitems/swipeToDismiss', 'title': 'Swipe-to-dismiss', 'theme': 'swipeToDismiss'},\r\n      { 'url': 'subitems/googleCards', 'title': 'Google Cards', 'theme': 'googleCards'},\r\n    ];\r\n  }\r\n\r\n  getDataForTheme = (menuItem: any): Array<any> => {\r\n    return [];\r\n  }\r\n\r\n  load(url: string) {\r\n    return null;\r\n  }\r\n}\r\n","export class MailChimpService {\r\n\r\n  constructor() { }\r\n\r\n  showMailChimpForm() {\r\n    const mailChimp = localStorage.getItem('mailChimp') === 'true';\r\n    const mailChimpLocal = localStorage.getItem('mailChimpLocal') === 'true';\r\n    if (mailChimp) {\r\n      return false;\r\n    } else {\r\n      return mailChimpLocal;\r\n    }\r\n  }\r\n\r\n  setMailChimpForm(isVisible: boolean) {\r\n    localStorage.setItem('mailChimpLocal', isVisible + '');\r\n  }\r\n\r\n  hideMailChimp() {\r\n    localStorage.setItem('mailChimp', 'true');\r\n  }\r\n}\r\n","/**\r\n * Created by DRAGAN on 3/22/2017.\r\n */\r\nexport class ValidationService {\r\n\r\n  constructor() { }\r\n\r\n  isMail(email: string) {\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n}\r\n"],"sourceRoot":"webpack:///"}