{"version":3,"sources":["webpack:///src/app/pages/settings-page/modal.page.html","webpack:///src/app/pages/settings-page/settings-page.page.html","webpack:///src/app/pages/settings-page/modal.page.ts","webpack:///src/app/pages/settings-page/settings-page.module.ts","webpack:///src/app/pages/settings-page/settings-page.page.scss","webpack:///src/app/pages/settings-page/settings-page.page.ts"],"names":["ModalPage","modalController","restangular","allowedDays","event","county","enabled","e","default_days","detail","value","put","user_id","userId","county_fips","subscribe","r","closeModal","dismiss","selector","template","SettingsPageModule","imports","forChild","path","component","declarations","exports","schemas","SettingsPage","settingsService","toastCtrl","navCtrl","defaultSettings","deathsChecked","perChecked","defaultDays","settings","localStorage","getItem","JSON","parse","counties","i","push","getUserCounties","saveSettings","all","getList","co","map","c","checkEnabled","setItem","stringify","publishSettings","post","presentToast","create","componentProps","cssClass","backdropDismiss","modal","onDidDismiss","then","present","providers"],"mappings":"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","file":"pages-settings-page-settings-page-module-es5.js","sourcesContent":["export default \"\\n<ion-app>\\n  <ion-content class=\\\"transparent\\\">\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col>\\n          <h4 style=\\\"margin-top: 3px;\\\">Settings for {{county.county_name}}, {{county.state}}</h4>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\n          <ion-label class=\\\"\\\">\\n            <div class=\\\"text-color-primary ion-text-wrap\\\">\\n              <span class=\\\"font-light\\\">Number of Days to Display</span>\\n            </div>\\n          </ion-label>\\n        </ion-col>\\n        <ion-col size=\\\"3\\\" class=\\\"ion-align-self-center\\\">\\n          <ion-select interface=\\\"popover\\\" [ngModel]=\\\"county.default_days\\\" multiple=\\\"false\\\" (ionChange)=\\\"onChangeCountyDefaultDays($event)\\\">\\n            <ion-select-option value=\\\"\\\">Use default</ion-select-option>\\n            <ion-select-option *ngFor=\\\"let i of allowedDays\\\" [value]=\\\"i\\\">{{i}}</ion-select-option>\\n          </ion-select>\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\n          <ion-label class=\\\"\\\">\\n            <div class=\\\"text-color-primary ion-text-wrap\\\">\\n              <span class=\\\"font-light\\\">Send Push Notications</span>\\n            </div>\\n          </ion-label>\\n        </ion-col>\\n        <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n          <ion-label class=\\\"\\\">\\n            <ion-toggle\\n              slot=\\\"end\\\"\\n              (ionChange)=\\\"onChangedPushEnabled($event)\\\"\\n              [checked]=\\\"county.enabled === 1\\\"\\n              style=\\\"right: 10px;\\\">\\n            </ion-toggle>\\n          </ion-label>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-content>\\n  <ion-footer class=\\\"ion-no-border ion-padding\\\">\\n    <ion-toolbar>\\n      <ion-button class=\\\"default-button box-shadow\\\" (click)=\\\"saveAndCloseModal()\\\" >Save</ion-button>\\n      <ion-button class=\\\"default-button box-shadow\\\" (click)=\\\"closeModal()\\\" color=\\\"light\\\">Cancel</ion-button>\\n      \\n    </ion-toolbar>\\n  </ion-footer>\\n</ion-app>\";","export default \"<!-- Intro Page -->\\r\\n<ion-app>\\r\\n  <ion-header class=\\\"box-shadow\\\">\\r\\n    <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\r\\n      </ion-buttons>\\r\\n      <ion-title class=\\\"ion-text-capitalize\\\">Settings</ion-title>\\r\\n    </ion-toolbar>\\r\\n  </ion-header>\\r\\n  <ion-content class=\\\"background-size\\\" style=\\\"background-image: url('39.jpg')\\\">\\r\\n    <ion-grid>\\r\\n      <ion-row *ngIf=\\\"counties.length === 0\\\">\\r\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\r\\n          <ion-label class=\\\"ion-padding\\\">\\r\\n            <h2 class=\\\"text-size-md text-color-primary ion-text-wrap\\\">\\r\\n              <span class=\\\"font-bold\\\">No settings are available - please add some counties first!</span>\\r\\n            </h2>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row *ngIf=\\\"counties.length > 0\\\" style=\\\"padding-top: 24px; padding-bottom: 6px\\\">\\r\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            <h2 class=\\\"text-size-md text-color-primary ion-text-wrap\\\">\\r\\n              <span class=\\\"font-bold\\\">County Display and Notifications:</span>\\r\\n            </h2>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n\\r\\n      <ion-row *ngFor=\\\"let county of counties\\\">\\r\\n        <ion-col size=\\\"8\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            <h2 class=\\\"text-size-md text-color-primary ion-text-wrap\\\">\\r\\n              <span class=\\\"font-light\\\">{{county.county_name}}, {{county.state}}</span>\\r\\n            </h2>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"4\\\" class=\\\"ion-align-self-center\\\">\\r\\n          <ion-label class=\\\"ion-float-right\\\" style=\\\"margin-right: 4px;\\\">\\r\\n            <ion-button fill=\\\"outline\\\" class=\\\"\\\" size=\\\"small\\\" (click)=\\\"openModal(county)\\\">\\r\\n              <!-- <ion-icon size=\\\"small\\\" name=\\\"pencil\\\" style=\\\"margin-right: 4px\\\"></ion-icon> -->\\r\\n              Update\\r\\n            </ion-button>\\r\\n            <!-- <ion-checkbox slot=\\\"end\\\" (ngModelChange)=\\\"updateUserCounty(county)\\\" [ngModel]=\\\"county.checkEnabled\\\"></ion-checkbox> -->\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row *ngIf=\\\"counties.length > 0\\\" style=\\\"padding-top: 24px; padding-bottom: 6px\\\">\\r\\n        <ion-col size=\\\"12\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            <h2 class=\\\"text-size-md text-color-primary ion-text-wrap\\\">\\r\\n              <span class=\\\"font-bold\\\">General Display Settings:</span>\\r\\n            </h2>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            <h2 class=\\\"text-size-md text-color-primary ion-text-wrap\\\">\\r\\n              <span class=\\\"font-light\\\">Show Cases per 100k</span>\\r\\n            </h2>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            \\r\\n            <ion-toggle\\r\\n              slot=\\\"end\\\"\\r\\n              (ionChange)=\\\"ionChangePerChecked($event)\\\"\\r\\n              [checked]=\\\"perChecked\\\"\\r\\n              style=\\\"right: 10px;\\\">\\r\\n            </ion-toggle>\\r\\n\\r\\n            <!-- <ion-checkbox slot=\\\"end\\\" (ionChange)=\\\"ionChangePerChecked($event)\\\" [(ngModel)]=\\\"perChecked\\\"></ion-checkbox> -->\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"10\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            <h2 class=\\\"text-size-md text-color-primary ion-text-wrap\\\">\\r\\n              <span class=\\\"font-light\\\">Show Death Counts</span>\\r\\n            </h2>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            \\r\\n            <ion-toggle\\r\\n              slot=\\\"end\\\"\\r\\n              (ionChange)=\\\"ionChangeDeathsChecked($event)\\\"\\r\\n              [checked]=\\\"deathsChecked\\\"\\r\\n              style=\\\"right: 10px;\\\">\\r\\n            </ion-toggle>\\r\\n\\r\\n            <!-- <ion-checkbox slot=\\\"end\\\" (ionChange)=\\\"ionChangeDeathsChecked($event)\\\" [(ngModel)]=\\\"deathsChecked\\\"></ion-checkbox> -->\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n      <ion-row>\\r\\n        <ion-col size=\\\"9\\\" class=\\\"ion-align-self-center ion-padding-start\\\">\\r\\n          <ion-label class=\\\"\\\">\\r\\n            <h2 class=\\\"text-size-md text-color-primary ion-text-wrap\\\">\\r\\n              <span class=\\\"font-light\\\">Number of Days to Display</span>\\r\\n            </h2>\\r\\n          </ion-label>\\r\\n        </ion-col>\\r\\n        <ion-col size=\\\"3\\\" class=\\\"ion-align-self-center\\\">\\r\\n          <ion-select interface=\\\"popover\\\" [(ngModel)]=\\\"defaultDays\\\" multiple=\\\"false\\\" (ionChange)=\\\"onChangeDefaultDays($event)\\\">\\r\\n            <ion-select-option *ngFor=\\\"let i of allowedDays\\\" [value]=\\\"i\\\">{{i}}\\r\\n            </ion-select-option>\\r\\n          </ion-select>\\r\\n        </ion-col>\\r\\n      </ion-row>\\r\\n    </ion-grid>\\r\\n  </ion-content>\\r\\n</ion-app>\\r\\n\";","import { Component, Input, OnInit } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\n\nimport { Restangular } from 'ngx-restangular';\n\n@Component({\n  selector: 'app-county-modal',\n  templateUrl: 'modal.page.html',\n  styleUrls: ['settings-page.page.scss'],\n})\nexport class ModalPage implements OnInit{\n  @Input() county;\n  @Input() userId;\n  @Input() allowedDays = [];\n\n\n  constructor(public modalController: ModalController, private restangular: Restangular) {\n  }\n\n  ngOnInit(){\n  }\n\n  onChangedPushEnabled(event) {\n    this.county.enabled = this.county.enabled === 1 ? 0 : 1;\n  }\n\n  onChangeCountyDefaultDays(e) {\n    this.county.default_days = e.detail.value;\n  }\n\n  async saveAndCloseModal() {\n    this.county.put({\n      user_id: this.userId,\n      county_fips: this.county.county_fips,\n      enabled: this.county.enabled,\n      default_days: this.county.default_days})\n        .subscribe((r) =>{\n          this.closeModal();\n        })\n  }\n\n  async closeModal() {\n    await this.modalController.dismiss();\n  }\n}","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { ModalPage } from './modal.page';\nimport { SettingsPage } from './settings-page.page';\nimport { SharedModule } from '../../components/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    // IntroPageModule,\n    SharedModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: SettingsPage\n      }\n    ])\n  ],\n  declarations: [SettingsPage, ModalPage],\n  //entryComponents: [HomePage],\n  exports: [SettingsPage],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class SettingsPageModule { }\n","export default \"ion-row {\\n  border-bottom: solid .55px #C7C7CC;\\n}\\n\\n.updateButton {\\n  --border-radius: 6px;\\n  --padding-top: 0;\\n  --padding-start: 0.9em;\\n  --padding-end: 0.9em;\\n  --padding-bottom: 0;\\n  height: 2.1em;\\n  font-size: 13px;\\n}\\n\\n.updateButton [slot=start] {\\n  -webkit-margin-end: 4px !important;\\n          margin-inline-end: 4px !important;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvc2V0dGluZ3MtcGFnZS9zZXR0aW5ncy1wYWdlLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtDQUFrQztBQUNwQzs7QUFFQTtFQUNFLG9CQUFnQjtFQUNoQixnQkFBYztFQUNkLHNCQUFnQjtFQUNoQixvQkFBYztFQUNkLG1CQUFpQjtFQUNqQixhQUFhO0VBQ2IsZUFBZTtBQUNqQjs7QUFSQTtFQVVJLGtDQUFpQztVQUFqQyxpQ0FBaUM7QUFFckMiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9zZXR0aW5ncy1wYWdlL3NldHRpbmdzLXBhZ2UucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLXJvdyB7XG4gIGJvcmRlci1ib3R0b206IHNvbGlkIC41NXB4ICNDN0M3Q0M7XG59XG5cbi51cGRhdGVCdXR0b24ge1xuICAtLWJvcmRlci1yYWRpdXM6IDZweDtcbiAgLS1wYWRkaW5nLXRvcDogMDtcbiAgLS1wYWRkaW5nLXN0YXJ0OiAwLjllbTtcbiAgLS1wYWRkaW5nLWVuZDogMC45ZW07XG4gIC0tcGFkZGluZy1ib3R0b206IDA7XG4gIGhlaWdodDogMi4xZW07XG4gIGZvbnQtc2l6ZTogMTNweDtcblxuICBbc2xvdD1zdGFydF0ge1xuICAgIG1hcmdpbi1pbmxpbmUtZW5kOiA0cHggIWltcG9ydGFudDtcbiAgfVxufVxuIl19 */\";","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { Restangular } from 'ngx-restangular';\r\n\r\nimport { ToastService } from 'src/app/services/toast-service';\r\nimport { SettingsService } from './settings.service';\r\n\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ModalPage } from './modal.page';\r\n\r\nimport {groupBy, merge, uniq} from 'ramda';\r\n\r\n@Component({\r\n    templateUrl: 'settings-page.page.html',\r\n    styleUrls: ['settings-page.page.scss'],\r\n    providers: [],\r\n})\r\nexport class SettingsPage implements OnInit {\r\n    defaultSettings = {deathsChecked: true, perChecked: true, defaultDays: 10}; //TODO: if this is updated also update server!\r\n    settings = localStorage.getItem('_appSettings')\r\n      ? merge(this.defaultSettings, JSON.parse(localStorage.getItem('_appSettings')))\r\n      : this.defaultSettings;\r\n\r\n    deathsChecked = true;\r\n    perChecked = true;\r\n    defaultDays = this.settings.defaultDays;\r\n    allowedDays = [];\r\n    counties = localStorage.getItem('counties')\r\n      ? JSON.parse(localStorage.getItem('counties'))\r\n      : []\r\n    userId = localStorage.getItem('userId') || '';\r\n\r\n    constructor(\r\n        private settingsService: SettingsService,\r\n        private restangular: Restangular,\r\n        private toastCtrl: ToastService,\r\n        public navCtrl: NavController,\r\n        private modalController: ModalController) {\r\n          for(let i = 1; i < 90; i++) {\r\n            this.allowedDays.push(i);\r\n          }\r\n    }\r\n\r\n    ngOnInit() {\r\n      this.deathsChecked = this.settings.deathsChecked;\r\n      this.perChecked = this.settings.perChecked;\r\n      this.getUserCounties();\r\n    }\r\n\r\n    ionChangeDeathsChecked(event){\r\n      this.deathsChecked = !this.deathsChecked;\r\n      this.settings.deathsChecked = this.deathsChecked;\r\n      this.saveSettings();\r\n    }\r\n\r\n    ionChangePerChecked(event){\r\n      this.perChecked = !this.perChecked;\r\n      this.settings.perChecked = this.perChecked;\r\n      this.saveSettings();\r\n    }\r\n\r\n    onChangeDefaultDays(event) {\r\n      this.settings.defaultDays = this.defaultDays;\r\n      this.saveSettings();\r\n    }\r\n\r\n    getUserCounties() {\r\n      if(!this.userId) {\r\n        return\r\n      }\r\n      this.restangular.all('/userCounties').getList({userId: this.userId}).subscribe((co) => {\r\n        this.counties = co.map((c) => {\r\n          return merge(c, {checkEnabled: c.enabled === 1})\r\n        });\r\n      })\r\n    }\r\n\r\n    saveSettings() {\r\n      localStorage.setItem('_appSettings', JSON.stringify(this.settings))\r\n      this.settingsService.publishSettings(this.settings);\r\n\r\n      this.restangular.all('/updateUserSettings').post({user_id: this.userId, settings: JSON.stringify(this.settings)})\r\n        .subscribe((r) =>{\r\n          this.toastCtrl.presentToast('Settings have been updated', 2000);\r\n        })\r\n    }\r\n\r\n    async openModal(county) {\r\n      const modal = await this.modalController.create({\r\n          component: ModalPage,\r\n          componentProps: {\r\n            county,\r\n            userId: this.userId,\r\n            allowedDays: this.allowedDays\r\n          },\r\n          cssClass: 'larger-modal',\r\n          backdropDismiss: true\r\n        });\r\n      \r\n       modal.onDidDismiss().then(() => {\r\n        this.closeModal();\r\n       })\r\n       return await modal.present();\r\n    }\r\n  \r\n    closeModal() {\r\n      this.modalController.dismiss();\r\n      this.settingsService.publishSettings(this.settings);\r\n      this.toastCtrl.presentToast('Settings have been updated', 5000);\r\n    }\r\n}"]}